from NN import NeuralNetwork 
from NN2 import NeuralNetwork2
import time
import random
from matrices import mm
from layers import *
import numpy as np

def timer():
    start_time = time.perf_counter()
    end_time = time.perf_counter()
    elapsed_time = end_time - start_time
    print("Elapsed time: ", elapsed_time)
#timer()

def main():
    
    data = [[0, 0], [0, 1], [1, 0], [1, 1]]
    results = [[0], [1], [1], [0]]
    obj0 = Hidden(2)
    obj1 = ReLU()    
    obj2 = Hidden(10)
    obj3 = ReLU()
    obj4 = Hidden(10)
    obj5 = ReLU()
    obj6 = Hidden(10)
    o7 = ReLU()
    o8 = Hidden(10)
    o9 = ReLU()
    o10 = Hidden(1)
    nt = NeuralNetwork("MY_NN")
    nt.addLayer(obj0)
    nt.addLayer(obj1)
    nt.addLayer(obj2)
    nt.addLayer(obj3)
    nt.addLayer(obj4)
    nt.addLayer(obj5)
    '''
    nt.addLayer(obj6)
    nt.addLayer(o7)    
    nt.addLayer(o8)
    nt.addLayer(o9)
    '''
    nt.addLayer(o10)
    nt.training(data, results, 0.001 , 10000)
    
    print(nt.propagate_forwards([[0], [0]]))
    print(nt.propagate_forwards([[1], [0]]))
    print(nt.propagate_forwards([[0], [1]]))
    print(nt.propagate_forwards([[1], [1]]))
    


def m(a):
    for i in a:
        print(i)
    print("\n")

#main()

def main2():
    data = [[0, 0], [0, 1], [1, 0], [1, 1]]
    results = [[0], [1], [1], [0]]

    n = NeuralNetwork2("nut")
    layers = [["Hidden", 2], ["ReLU"], ["Hidden", 10], ["ReLU"], ["Hidden", 10], ["ReLU"], ["Hidden", 1]]
    for layer in layers:
        n.addLayer(layer)
    
    #n.displayLayers()

    n.training(data, results, 0.001, 10000)

    print(n.propagate_forwards([[0], [0]]))
    print(n.propagate_forwards([[1], [0]]))
    print(n.propagate_forwards([[0], [1]]))
    print(n.propagate_forwards([[1], [1]]))
    
#main2()

def proc():
    mnist = []
    file = open("mnist_train.csv", "r")
    for i in file:
        y = [0]*10
        y[int(i[0])] = 1
        x = list(map(lambda n: int(n)/255, i[:-1].split(",")[1:]))
        mnist.append([x, y])
    file.close()
    return mnist

'''
mnist = proc()


mNetwork = NeuralNetwork2("MNIST")
layers = [["Hidden", 784], ["ReLU"], ["Hidden", 100], ["ReLU"], ["Hidden", 100], ["ReLU"], ["Hidden", 100], ["ReLU"], ["Hidden", 10]]
for layer in layers:
    mNetwork.addLayer(layer)
    

'''

